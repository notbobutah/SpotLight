 ./scripts/build_infrastructure.sh 
>>> Initializing Terraform...
Initializing modules...

Initializing the backend...

Initializing provider plugins...

The following providers do not have any version constraints in configuration,
so the latest version was installed.

To prevent automatic upgrades to new major versions that may contain breaking
changes, it is recommended to add version = "..." constraints to the
corresponding provider blocks in configuration, with the constraint strings
suggested below.

* provider.external: version = "~> 1.2"
* provider.random: version = "~> 2.2"
* provider.template: version = "~> 2.1"

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
>>> Applying Terrafrom configuration to spotlight-deployment-kosinpb project...
data.google_client_config.current: Refreshing state...
data.google_compute_zones.available: Refreshing state...
module.endpoint-dns.data.external.module-cloudep-dns-prep[0]: Refreshing state...

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # google_compute_global_address.private_cloud_sql will be created
  + resource "google_compute_global_address" "private_cloud_sql" {
      + address            = (known after apply)
      + address_type       = "INTERNAL"
      + creation_timestamp = (known after apply)
      + id                 = (known after apply)
      + label_fingerprint  = (known after apply)
      + name               = "private-cloud-sql"
      + network            = (known after apply)
      + prefix_length      = 20
      + project            = (known after apply)
      + purpose            = "VPC_PEERING"
      + self_link          = (known after apply)
    }

  # google_compute_global_address.public will be created
  + resource "google_compute_global_address" "public" {
      + address            = (known after apply)
      + creation_timestamp = (known after apply)
      + id                 = (known after apply)
      + name               = "spotlight"
      + project            = (known after apply)
      + self_link          = (known after apply)
    }

  # google_compute_network.network will be created
  + resource "google_compute_network" "network" {
      + auto_create_subnetworks         = false
      + delete_default_routes_on_create = false
      + gateway_ipv4                    = (known after apply)
      + id                              = (known after apply)
      + name                            = "spotlight"
      + project                         = (known after apply)
      + routing_mode                    = (known after apply)
      + self_link                       = (known after apply)
    }

  # google_compute_router.router will be created
  + resource "google_compute_router" "router" {
      + creation_timestamp = (known after apply)
      + id                 = (known after apply)
      + name               = "router"
      + network            = (known after apply)
      + project            = (known after apply)
      + region             = (known after apply)
      + self_link          = (known after apply)
    }

  # google_compute_router_nat.node-pool-nat will be created
  + resource "google_compute_router_nat" "node-pool-nat" {
      + icmp_idle_timeout_sec              = 30
      + id                                 = (known after apply)
      + name                               = "spotlight-node-pool-nat"
      + nat_ip_allocate_option             = "AUTO_ONLY"
      + project                            = (known after apply)
      + region                             = (known after apply)
      + router                             = "router"
      + source_subnetwork_ip_ranges_to_nat = "LIST_OF_SUBNETWORKS"
      + tcp_established_idle_timeout_sec   = 1200
      + tcp_transitory_idle_timeout_sec    = 30
      + udp_idle_timeout_sec               = 30

      + subnetwork {
          + name                     = (known after apply)
          + secondary_ip_range_names = []
          + source_ip_ranges_to_nat  = [
              + "PRIMARY_IP_RANGE",
            ]
        }
    }

  # google_compute_subnetwork.subnet-gke will be created
  + resource "google_compute_subnetwork" "subnet-gke" {
      + creation_timestamp = (known after apply)
      + enable_flow_logs   = (known after apply)
      + fingerprint        = (known after apply)
      + gateway_address    = (known after apply)
      + id                 = (known after apply)
      + ip_cidr_range      = "10.10.0.0/16"
      + name               = "subnet-gke"
      + network            = "spotlight"
      + project            = (known after apply)
      + region             = (known after apply)
      + secondary_ip_range = [
          + {
              + ip_cidr_range = "10.11.0.0/16"
              + range_name    = "pod-net"
            },
          + {
              + ip_cidr_range = "10.12.0.0/16"
              + range_name    = "service-net"
            },
        ]
      + self_link          = (known after apply)

      + log_config {
          + aggregation_interval = (known after apply)
          + flow_sampling        = (known after apply)
          + metadata             = (known after apply)
        }
    }

  # google_container_cluster.primary will be created
  + resource "google_container_cluster" "primary" {
      + additional_zones            = (known after apply)
      + cluster_autoscaling         = (known after apply)
      + cluster_ipv4_cidr           = (known after apply)
      + default_max_pods_per_node   = (known after apply)
      + enable_binary_authorization = (known after apply)
      + enable_kubernetes_alpha     = false
      + enable_legacy_abac          = false
      + enable_tpu                  = (known after apply)
      + endpoint                    = (known after apply)
      + id                          = (known after apply)
      + initial_node_count          = 1
      + instance_group_urls         = (known after apply)
      + ip_allocation_policy        = [
          + {
              + cluster_ipv4_cidr_block       = (known after apply)
              + cluster_secondary_range_name  = "pod-net"
              + create_subnetwork             = (known after apply)
              + node_ipv4_cidr_block          = (known after apply)
              + services_ipv4_cidr_block      = (known after apply)
              + services_secondary_range_name = "service-net"
              + subnetwork_name               = (known after apply)
              + use_ip_aliases                = true
            },
        ]
      + location                    = "us-central1-a"
      + logging_service             = (known after apply)
      + master_version              = (known after apply)
      + monitoring_service          = (known after apply)
      + name                        = "spotlight-cluster"
      + network                     = (known after apply)
      + node_locations              = (known after apply)
      + node_version                = (known after apply)
      + project                     = (known after apply)
      + region                      = (known after apply)
      + remove_default_node_pool    = true
      + services_ipv4_cidr          = (known after apply)
      + subnetwork                  = (known after apply)
      + zone                        = (known after apply)

      + addons_config {
          + horizontal_pod_autoscaling {
              + disabled = (known after apply)
            }

          + http_load_balancing {
              + disabled = (known after apply)
            }

          + kubernetes_dashboard {
              + disabled = (known after apply)
            }

          + network_policy_config {
              + disabled = (known after apply)
            }
        }

      + master_auth {
          + client_certificate     = (known after apply)
          + client_key             = (sensitive value)
          + cluster_ca_certificate = (known after apply)

          + client_certificate_config {
              + issue_client_certificate = (known after apply)
            }
        }

      + master_authorized_networks_config {
          + cidr_blocks {
              + cidr_block   = "0.0.0.0/0"
              + display_name = "all"
            }
        }

      + network_policy {
          + enabled  = (known after apply)
          + provider = (known after apply)
        }

      + node_config {
          + disk_size_gb      = (known after apply)
          + disk_type         = (known after apply)
          + guest_accelerator = (known after apply)
          + image_type        = (known after apply)
          + labels            = (known after apply)
          + local_ssd_count   = (known after apply)
          + machine_type      = (known after apply)
          + metadata          = (known after apply)
          + min_cpu_platform  = (known after apply)
          + oauth_scopes      = (known after apply)
          + preemptible       = (known after apply)
          + service_account   = (known after apply)
          + tags              = (known after apply)

          + sandbox_config {
              + sandbox_type = (known after apply)
            }

          + shielded_instance_config {
              + enable_integrity_monitoring = (known after apply)
              + enable_secure_boot          = (known after apply)
            }

          + taint {
              + effect = (known after apply)
              + key    = (known after apply)
              + value  = (known after apply)
            }

          + workload_metadata_config {
              + node_metadata = (known after apply)
            }
        }

      + node_pool {
          + initial_node_count  = (known after apply)
          + instance_group_urls = (known after apply)
          + max_pods_per_node   = (known after apply)
          + name                = (known after apply)
          + name_prefix         = (known after apply)
          + node_count          = (known after apply)
          + version             = (known after apply)

          + autoscaling {
              + max_node_count = (known after apply)
              + min_node_count = (known after apply)
            }

          + management {
              + auto_repair  = (known after apply)
              + auto_upgrade = (known after apply)
            }

          + node_config {
              + disk_size_gb      = (known after apply)
              + disk_type         = (known after apply)
              + guest_accelerator = (known after apply)
              + image_type        = (known after apply)
              + labels            = (known after apply)
              + local_ssd_count   = (known after apply)
              + machine_type      = (known after apply)
              + metadata          = (known after apply)
              + min_cpu_platform  = (known after apply)
              + oauth_scopes      = (known after apply)
              + preemptible       = (known after apply)
              + service_account   = (known after apply)
              + tags              = (known after apply)

              + sandbox_config {
                  + sandbox_type = (known after apply)
                }

              + shielded_instance_config {
                  + enable_integrity_monitoring = (known after apply)
                  + enable_secure_boot          = (known after apply)
                }

              + taint {
                  + effect = (known after apply)
                  + key    = (known after apply)
                  + value  = (known after apply)
                }

              + workload_metadata_config {
                  + node_metadata = (known after apply)
                }
            }
        }

      + private_cluster_config {
          + enable_private_nodes   = true
          + master_ipv4_cidr_block = "10.99.0.0/28"
          + private_endpoint       = (known after apply)
          + public_endpoint        = (known after apply)
        }
    }

  # google_container_node_pool.primary will be created
  + resource "google_container_node_pool" "primary" {
      + cluster             = "spotlight-cluster"
      + id                  = (known after apply)
      + initial_node_count  = (known after apply)
      + instance_group_urls = (known after apply)
      + location            = "us-central1-a"
      + max_pods_per_node   = (known after apply)
      + name                = "lofacats-node-pool"
      + name_prefix         = (known after apply)
      + node_count          = 2
      + project             = (known after apply)
      + region              = (known after apply)
      + version             = (known after apply)
      + zone                = (known after apply)

      + management {
          + auto_repair  = (known after apply)
          + auto_upgrade = (known after apply)
        }

      + node_config {
          + disk_size_gb      = (known after apply)
          + disk_type         = (known after apply)
          + guest_accelerator = (known after apply)
          + image_type        = (known after apply)
          + labels            = (known after apply)
          + local_ssd_count   = (known after apply)
          + machine_type      = "n1-highcpu-2"
          + metadata          = (known after apply)
          + oauth_scopes      = [
              + "https://www.googleapis.com/auth/compute",
              + "https://www.googleapis.com/auth/devstorage.read_only",
              + "https://www.googleapis.com/auth/logging.write",
              + "https://www.googleapis.com/auth/monitoring",
            ]
          + preemptible       = true
          + service_account   = (known after apply)

          + shielded_instance_config {
              + enable_integrity_monitoring = (known after apply)
              + enable_secure_boot          = (known after apply)
            }
        }
    }

  # google_project_service.container_api will be created
  + resource "google_project_service" "container_api" {
      + disable_on_destroy = true
      + id                 = (known after apply)
      + project            = (known after apply)
      + service            = "container.googleapis.com"
    }

  # google_project_service.servicenetworking_api will be created
  + resource "google_project_service" "servicenetworking_api" {
      + disable_on_destroy = true
      + id                 = (known after apply)
      + project            = (known after apply)
      + service            = "servicenetworking.googleapis.com"
    }

  # google_project_service.sqladmin_api will be created
  + resource "google_project_service" "sqladmin_api" {
      + disable_on_destroy = true
      + id                 = (known after apply)
      + project            = (known after apply)
      + service            = "sqladmin.googleapis.com"
    }

  # google_service_networking_connection.cloud_sql will be created
  + resource "google_service_networking_connection" "cloud_sql" {
      + id                      = (known after apply)
      + network                 = (known after apply)
      + peering                 = (known after apply)
      + reserved_peering_ranges = [
          + "private-cloud-sql",
        ]
      + service                 = "servicenetworking.googleapis.com"
    }

  # google_sql_database.default will be created
  + resource "google_sql_database" "default" {
      + charset   = (known after apply)
      + collation = (known after apply)
      + id        = (known after apply)
      + instance  = (known after apply)
      + name      = "spotlight"
      + project   = (known after apply)
      + self_link = (known after apply)
    }

  # google_sql_database_instance.primary will be created
  + resource "google_sql_database_instance" "primary" {
      + connection_name               = (known after apply)
      + database_version              = "POSTGRES_9_6"
      + first_ip_address              = (known after apply)
      + id                            = (known after apply)
      + ip_address                    = (known after apply)
      + master_instance_name          = (known after apply)
      + name                          = (known after apply)
      + private_ip_address            = (known after apply)
      + project                       = (known after apply)
      + public_ip_address             = (known after apply)
      + region                        = (known after apply)
      + self_link                     = (known after apply)
      + server_ca_cert                = (known after apply)
      + service_account_email_address = (known after apply)

      + replica_configuration {
          + ca_certificate            = (known after apply)
          + client_certificate        = (known after apply)
          + client_key                = (known after apply)
          + connect_retry_interval    = (known after apply)
          + dump_file_path            = (known after apply)
          + failover_target           = (known after apply)
          + master_heartbeat_period   = (known after apply)
          + password                  = (sensitive value)
          + ssl_cipher                = (known after apply)
          + username                  = (known after apply)
          + verify_server_certificate = (known after apply)
        }

      + settings {
          + activation_policy      = (known after apply)
          + availability_type      = "REGIONAL"
          + crash_safe_replication = (known after apply)
          + disk_autoresize        = true
          + disk_size              = (known after apply)
          + disk_type              = (known after apply)
          + pricing_plan           = "PER_USE"
          + replication_type       = "SYNCHRONOUS"
          + tier                   = "db-f1-micro"
          + version                = (known after apply)

          + backup_configuration {
              + enabled    = true
              + start_time = "03:00"
            }

          + ip_configuration {
              + ipv4_enabled    = false
              + private_network = (known after apply)
            }

          + location_preference {
              + zone = "us-central1-a"
            }

          + maintenance_window {
              + day          = 7
              + hour         = 4
              + update_track = "stable"
            }
        }
    }

  # google_sql_user.default will be created
  + resource "google_sql_user" "default" {
      + id       = (known after apply)
      + instance = (known after apply)
      + name     = "spotlight"
      + password = (sensitive value)
      + project  = (known after apply)
    }

  # random_id.db-name will be created
  + resource "random_id" "db-name" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 2
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # random_id.user-password will be created
  + resource "random_id" "user-password" {
      + b64         = (known after apply)
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 8
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.endpoint-dns.data.template_file.openapi_spec will be read during apply
  # (config refers to values not yet known)
 <= data "template_file" "openapi_spec"  {
      + id       = (known after apply)
      + rendered = (known after apply)
      + template = <<~EOT
            # Copyright 2018 Google LLC
            #
            # Licensed under the Apache License, Version 2.0 (the "License");
            # you may not use this file except in compliance with the License.
            # You may obtain a copy of the License at
            #
            #      http://www.apache.org/licenses/LICENSE-2.0
            #
            # Unless required by applicable law or agreed to in writing, software
            # distributed under the License is distributed on an "AS IS" BASIS,
            # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
            # See the License for the specific language governing permissions and
            # limitations under the License.
            
            swagger: "2.0"
            info:
              description: "wildcard config for any HTTP service."
              title: "General HTTP Service."
              version: "1.0.0"
            host: "${endpoint_service}"
            x-google-endpoints:
            - name: "${endpoint_service}"
              target: "${target}"
            basePath: "/"
            consumes:
            - "application/json"
            produces:
            - "application/json"
            schemes:
            - "http"
            - "https"
            paths:
              "/**":
                get:
                  operationId: Get
                  responses:
                    '200':
                      description: Get
                    default:
                      description: Error
                delete:
                  operationId: Delete
                  responses:
                    '204':
                      description: Delete
                    default:
                      description: Error
                patch:
                  operationId: Patch
                  responses:
                    '200':
                      description: Patch
                    default:
                      description: Error
                post:
                  operationId: Post
                  responses:
                    '200':
                      description: Post
                    default:
                      description: Error
                put:
                  operationId: Put
                  responses:
                    '200':
                      description: Put
                    default:
                      description: Error
        EOT
      + vars     = {
          + "endpoint_service" = "spotlight.endpoints.spotlight-deployment-kosinpb.cloud.goog"
          + "target"           = (known after apply)
        }
    }

  # module.endpoint-dns.google_endpoints_service.default will be created
  + resource "google_endpoints_service" "default" {
      + apis           = (known after apply)
      + config_id      = (known after apply)
      + dns_address    = (known after apply)
      + endpoints      = (known after apply)
      + id             = (known after apply)
      + openapi_config = (known after apply)
      + project        = "spotlight-deployment-kosinpb"
      + protoc_output  = (known after apply)
      + service_name   = "spotlight.endpoints.spotlight-deployment-kosinpb.cloud.goog"
    }

  # module.endpoint-dns.google_project_service.endpoints will be created
  + resource "google_project_service" "endpoints" {
      + disable_on_destroy = false
      + id                 = (known after apply)
      + project            = "spotlight-deployment-kosinpb"
      + service            = "servicemanagement.googleapis.com"
    }

  # module.endpoint-dns.google_project_service.service-usage will be created
  + resource "google_project_service" "service-usage" {
      + disable_on_destroy = false
      + id                 = (known after apply)
      + project            = "spotlight-deployment-kosinpb"
      + service            = "serviceusage.googleapis.com"
    }

Plan: 20 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes
  random_id.user-password: Creating...
random_id.db-name: Creating...
random_id.db-name: Creation complete after 0s [id=6os]
random_id.user-password: Creation complete after 0s [id=ygH8qWwtMVM]
module.endpoint-dns.google_project_service.endpoints: Creating...
module.endpoint-dns.google_project_service.service-usage: Creating...
google_project_service.container_api: Creating...
google_project_service.sqladmin_api: Creating...
google_project_service.servicenetworking_api: Creating...
google_compute_global_address.public: Creating...
google_compute_global_address.public: Creation complete after 3s [id=spotlight]
module.endpoint-dns.data.template_file.openapi_spec: Refreshing state...
module.endpoint-dns.google_project_service.service-usage: Still creating... [10s elapsed]
module.endpoint-dns.google_project_service.endpoints: Still creating... [10s elapsed]
google_project_service.container_api: Still creating... [10s elapsed]
google_project_service.sqladmin_api: Still creating... [10s elapsed]
google_project_service.servicenetworking_api: Still creating... [10s elapsed]
module.endpoint-dns.google_project_service.endpoints: Still creating... [20s elapsed]
module.endpoint-dns.google_project_service.service-usage: Still creating... [20s elapsed]
google_project_service.container_api: Still creating... [20s elapsed]
google_project_service.sqladmin_api: Still creating... [20s elapsed]
google_project_service.servicenetworking_api: Still creating... [20s elapsed]
module.endpoint-dns.google_project_service.service-usage: Still creating... [30s elapsed]
module.endpoint-dns.google_project_service.endpoints: Still creating... [30s elapsed]
google_project_service.container_api: Still creating... [30s elapsed]
google_project_service.sqladmin_api: Still creating... [30s elapsed]
google_project_service.servicenetworking_api: Still creating... [30s elapsed]
google_project_service.sqladmin_api: Creation complete after 37s [id=spotlight-deployment-kosinpb/sqladmin.googleapis.com]
google_project_service.servicenetworking_api: Creation complete after 37s [id=spotlight-deployment-kosinpb/servicenetworking.googleapis.com]
module.endpoint-dns.google_project_service.endpoints: Creation complete after 37s [id=spotlight-deployment-kosinpb/servicemanagement.googleapis.com]
module.endpoint-dns.google_project_service.service-usage: Creation complete after 37s [id=spotlight-deployment-kosinpb/serviceusage.googleapis.com]
google_project_service.container_api: Creation complete after 37s [id=spotlight-deployment-kosinpb/container.googleapis.com]
google_compute_network.network: Creating...
module.endpoint-dns.google_endpoints_service.default: Creating...
google_compute_network.network: Still creating... [10s elapsed]
google_compute_network.network: Creation complete after 15s [id=spotlight]
google_compute_router.router: Creating...
google_compute_global_address.private_cloud_sql: Creating...
google_compute_subnetwork.subnet-gke: Creating...
google_compute_global_address.private_cloud_sql: Creation complete after 4s [id=private-cloud-sql]
google_service_networking_connection.cloud_sql: Creating...
google_compute_router.router: Creation complete after 4s [id=us-central1/router]
google_compute_subnetwork.subnet-gke: Still creating... [10s elapsed]
google_service_networking_connection.cloud_sql: Still creating... [10s elapsed]
google_compute_subnetwork.subnet-gke: Still creating... [20s elapsed]
google_service_networking_connection.cloud_sql: Still creating... [20s elapsed]
google_compute_subnetwork.subnet-gke: Creation complete after 26s [id=us-central1/subnet-gke]
google_compute_router_nat.node-pool-nat: Creating...
google_container_cluster.primary: Creating...
google_service_networking_connection.cloud_sql: Still creating... [30s elapsed]
google_compute_router_nat.node-pool-nat: Still creating... [10s elapsed]
google_container_cluster.primary: Still creating... [10s elapsed]
google_compute_router_nat.node-pool-nat: Creation complete after 16s [id=spotlight-deployment-kosinpb/us-central1/router/spotlight-node-pool-nat]
google_service_networking_connection.cloud_sql: Still creating... [40s elapsed]
google_container_cluster.primary: Still creating... [20s elapsed]
google_service_networking_connection.cloud_sql: Still creating... [50s elapsed]
google_container_cluster.primary: Still creating... [30s elapsed]
google_service_networking_connection.cloud_sql: Creation complete after 56s [id=https%3A%2F%2Fwww.googleapis.com%2Fcompute%2Fv1%2Fprojects%2Fspotlight-deployment-kosinpb%2Fglobal%2Fnetworks%2Fspotlight:servicenetworking.googleapis.com]
google_sql_database_instance.primary: Creating...
google_container_cluster.primary: Still creating... [40s elapsed]
google_sql_database_instance.primary: Still creating... [10s elapsed]
google_container_cluster.primary: Still creating... [50s elapsed]
google_sql_database_instance.primary: Still creating... [20s elapsed]
google_container_cluster.primary: Still creating... [1m0s elapsed]
google_sql_database_instance.primary: Still creating... [30s elapsed]
google_container_cluster.primary: Still creating... [1m10s elapsed]
google_sql_database_instance.primary: Still creating... [40s elapsed]
google_container_cluster.primary: Still creating... [1m20s elapsed]
google_sql_database_instance.primary: Still creating... [50s elapsed]
google_container_cluster.primary: Still creating... [1m30s elapsed]
google_sql_database_instance.primary: Still creating... [1m0s elapsed]
google_container_cluster.primary: Still creating... [1m40s elapsed]
google_sql_database_instance.primary: Still creating... [1m10s elapsed]
google_container_cluster.primary: Still creating... [1m50s elapsed]
google_sql_database_instance.primary: Still creating... [1m20s elapsed]
google_container_cluster.primary: Still creating... [2m0s elapsed]
google_sql_database_instance.primary: Still creating... [1m30s elapsed]
google_container_cluster.primary: Still creating... [2m10s elapsed]
google_sql_database_instance.primary: Still creating... [1m40s elapsed]
google_container_cluster.primary: Still creating... [2m20s elapsed]
google_sql_database_instance.primary: Still creating... [1m50s elapsed]
google_container_cluster.primary: Still creating... [2m30s elapsed]
google_sql_database_instance.primary: Still creating... [2m0s elapsed]
google_container_cluster.primary: Still creating... [2m40s elapsed]
google_sql_database_instance.primary: Still creating... [2m10s elapsed]
google_container_cluster.primary: Still creating... [2m50s elapsed]
google_sql_database_instance.primary: Still creating... [2m20s elapsed]
google_container_cluster.primary: Still creating... [3m0s elapsed]
google_sql_database_instance.primary: Still creating... [2m30s elapsed]
google_container_cluster.primary: Still creating... [3m10s elapsed]
google_sql_database_instance.primary: Still creating... [2m40s elapsed]
google_container_cluster.primary: Still creating... [3m20s elapsed]
google_sql_database_instance.primary: Still creating... [2m50s elapsed]
google_container_cluster.primary: Still creating... [3m30s elapsed]
google_sql_database_instance.primary: Still creating... [3m0s elapsed]
google_container_cluster.primary: Still creating... [3m40s elapsed]
google_sql_database_instance.primary: Still creating... [3m10s elapsed]
google_container_cluster.primary: Still creating... [3m50s elapsed]
google_sql_database_instance.primary: Still creating... [3m20s elapsed]
google_container_cluster.primary: Still creating... [4m0s elapsed]
google_sql_database_instance.primary: Still creating... [3m30s elapsed]
google_container_cluster.primary: Still creating... [4m10s elapsed]
google_sql_database_instance.primary: Still creating... [3m40s elapsed]
google_container_cluster.primary: Still creating... [4m20s elapsed]
google_sql_database_instance.primary: Still creating... [3m50s elapsed]
google_container_cluster.primary: Still creating... [4m30s elapsed]
google_sql_database_instance.primary: Still creating... [4m0s elapsed]
google_container_cluster.primary: Still creating... [4m40s elapsed]
google_sql_database_instance.primary: Still creating... [4m10s elapsed]
google_container_cluster.primary: Still creating... [4m50s elapsed]
google_sql_database_instance.primary: Still creating... [4m20s elapsed]
google_container_cluster.primary: Still creating... [5m0s elapsed]
google_sql_database_instance.primary: Still creating... [4m30s elapsed]
google_container_cluster.primary: Still creating... [5m10s elapsed]
google_sql_database_instance.primary: Still creating... [4m40s elapsed]
google_container_cluster.primary: Still creating... [5m20s elapsed]
google_sql_database_instance.primary: Still creating... [4m50s elapsed]
google_container_cluster.primary: Creation complete after 5m25s [id=spotlight-cluster]
google_container_node_pool.primary: Creating...
google_sql_database_instance.primary: Still creating... [5m0s elapsed]
google_container_node_pool.primary: Still creating... [10s elapsed]
google_sql_database_instance.primary: Still creating... [5m10s elapsed]
google_container_node_pool.primary: Still creating... [20s elapsed]
google_sql_database_instance.primary: Still creating... [5m20s elapsed]
google_container_node_pool.primary: Still creating... [30s elapsed]
google_sql_database_instance.primary: Still creating... [5m30s elapsed]
google_container_node_pool.primary: Still creating... [40s elapsed]
google_sql_database_instance.primary: Still creating... [5m40s elapsed]
google_container_node_pool.primary: Still creating... [50s elapsed]
google_container_node_pool.primary: Creation complete after 56s [id=us-central1-a/spotlight-cluster/lofacats-node-pool]
google_sql_database_instance.primary: Still creating... [5m50s elapsed]
google_sql_database_instance.primary: Still creating... [6m0s elapsed]
google_sql_database_instance.primary: Still creating... [6m10s elapsed]
google_sql_database_instance.primary: Still creating... [6m20s elapsed]
google_sql_database_instance.primary: Still creating... [6m30s elapsed]
google_sql_database_instance.primary: Still creating... [6m40s elapsed]
google_sql_database_instance.primary: Still creating... [6m50s elapsed]
google_sql_database_instance.primary: Still creating... [7m0s elapsed]
google_sql_database_instance.primary: Creation complete after 7m7s [id=spotlight-db-ea8b]
google_sql_user.default: Creating...
google_sql_database.default: Creating...
google_sql_user.default: Creation complete after 3s [id=spotlight//spotlight-db-ea8b]
google_sql_database.default: Creation complete after 7s [id=spotlight-db-ea8b:spotlight]


